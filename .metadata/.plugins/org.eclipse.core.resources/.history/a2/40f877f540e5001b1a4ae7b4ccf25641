package com.feescheduler.qa.feeschedulertestcases;

import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Listeners;
import org.testng.annotations.Test;

import com.feescheduler.qa.ExtentReportListener.AllureReportListener;
import com.feescheduler.qa.base.BaseTest;
import com.feescheduler.qa.pages.FeeSchedulerLoginPage;
import com.feescheduler.qa.pages.FeeSchedulerPage;
import com.feescheduler.qa.pages.HomePage;
import com.feescheduler.qa.util.Xls_Reader;

import io.qameta.allure.Description;
import io.qameta.allure.Severity;
import io.qameta.allure.SeverityLevel;
import io.qameta.allure.Story;

/**
 * <p>
 * <b>37965-Create a Fee Schedule with positive data</b>
 * </p>
 * <p>
 * 1.In RC3 application URL click on the login button enter login credentials
 * (FSMMIT1/FSMMIT1).
 * </p>
 * <p>
 * 2.Go to the FEE SCHEDULER tab on the left side of the screen click on it.
 * <p>
 * 3.New window of Fee Scheduler appears
 * <p>
 * 4.
 *
 * @author manas jena
 *
 */

@Listeners({ AllureReportListener.class })
public class CreateNewFeeSchedulewithPositiveDataTest extends BaseTest {
	FeeSchedulerLoginPage feeschedulerloginPage;
	HomePage homePage;
	FeeSchedulerPage feeSchedulePage;
	String feeScheduleName;
	String description;

	public CreateNewFeeSchedulewithPositiveDataTest() {
		super();
	}

	@BeforeMethod
	public void setUP() throws InterruptedException {
		initialization();
		feeschedulerloginPage = new FeeSchedulerLoginPage();
		feeSchedulePage = new FeeSchedulerPage();
		feeschedulerloginPage.clickOnLogin();
		Thread.sleep(3000);
		homePage = feeschedulerloginPage.login(prop.getProperty("username"), prop.getProperty("password"));
		Thread.sleep(3000);
		String title = feeschedulerloginPage.verifyPageTitle();
		System.out.println(title);
		Thread.sleep(5000);
		if (title.equalsIgnoreCase("Login â€“ ReimbursementCodes")) {
			feeschedulerloginPage.TerminateSession();
			Thread.sleep(5000);
			homePage = feeschedulerloginPage.login_afterTermination(prop.getProperty("username"),
					prop.getProperty("password"));
			Thread.sleep(10000);

		}
	}

	@Test(priority = 1, description = "Create New FeeScheduler with Positive Data")
	@Severity(SeverityLevel.CRITICAL)
	@Description("TestCase Description : Create New FeeScheduler with Positive Data ")
	@Story("Story Name : To check Creation New FeeScheduler with Positive Data")
	public void createNewFeeSchedulerTest() throws InterruptedException {
		String path = System.getProperty("user.dir")
				+ "\\src\\main\\java\\com\\feescheduler\\qa\\testdata\\AppData.xlsx";
		Xls_Reader reader = new Xls_Reader(path);

		homePage.clickOnFeeSchedulerTab();
		if (homePage.checkNumberOfTab() == 1) {
			homePage.clickOnKillSessionPopUpVisible();
			Thread.sleep(5000);
		}

		else {
			homePage.switchTabToFeeScheduler();
		}

		homePage.switchTabToParentTab();
		homePage.switchTabToFeeScheduler();

		feeSchedulePage.clickOnFeeSchedulerMgmt();
		Thread.sleep(5000);

		int rowCount = reader.getRowCount("FeeScheduleMgmt");

		for (int rowNum = 2; rowNum <= rowCount; rowNum++) {

			feeScheduleName = reader.getCellData("FeeScheduleMgmt", "Fee Schedule Name", rowNum);
			description = reader.getCellData("FeeScheduleMgmt", "Description", rowNum);
			feeSchedulePage.clickOnCreateNewButton();
			Thread.sleep(5000);

		}

	}

	@AfterMethod
	public void tearDown() {
		driver.quit();
	}

}
